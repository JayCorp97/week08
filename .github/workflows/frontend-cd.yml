# .github/workflows/frontend-cd.yml

name: CD - Deploy Frontend to AKS

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      product_api_ip:
        description: 'External IP of Product Service (e.g., http://X.X.X.X:8000)'
        required: true
      order_api_ip:
        description: 'External IP of Order Service (e.g., http://Y.Y.Y.Y:8001)'
        required: true
      aks_cluster_name:
        description: 'Name of the AKS Cluster to deploy to'
        required: true
      aks_resource_group:
        description: 'Resource Group of the AKS Cluster'
        required: true
      image_tag:
        description: 'Frontend image tag (optional, default is "latest")'
        required: false
        default: 'latest'

  # Allow other workflows to call this one
  workflow_call:
    inputs:
      product_api_ip:
        required: true
        type: string
      order_api_ip:
        required: true
        type: string
      aks_cluster_name:
        required: true
        type: string
      aks_resource_group:
        required: true
        type: string
      image_tag:
        required: false
        type: string
        default: 'latest'

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: az acr login --name ${{ env.ACR_LOGIN_SERVER }}

      - name: Inject Backend IPs into Frontend main.js
        run: |
          echo "Injecting API IPs into frontend/main.js"
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" frontend/main.js
          
          echo "--- Updated frontend/main.js ---"
          cat frontend/main.js
          echo "--------------------------------"

      - name: Build and Push Frontend Docker Image
        run: |
          echo "Building and pushing frontend image with tag: ${{ inputs.image_tag }}"
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ inputs.image_tag }} ./frontend/
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ inputs.image_tag }}

      - name: Set Kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      - name: Deploy Frontend to AKS
        run: |
          echo "Deploying frontend to AKS with image tag: ${{ inputs.image_tag }}"
          # Patch frontend.yaml with the dynamic image tag if needed
          sed -i "s|image: .*frontend:.*|image: ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ inputs.image_tag }}|g" k8s/frontend.yaml
          
          kubectl apply -f k8s/frontend.yaml

      - name: Logout from Azure
        run: az logout
